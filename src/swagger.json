{
    "swagger": "2.0",
    "info": {
        "description": "BiSU Order Assignment is the project API.",
        "version": "1.0.0",
        "title": "BiSU Order Assignment",
        "contact": {
            "email": "semihyildiz9553@gmail.com"
        }
    },
    "host": "localhost:3636",
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "product",
            "description": "Everything about the products."
        },
        {
            "name": "order",
            "description": "Everything about the orders"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/api/v1/product": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Returns all products.",
                "description": " Returns all products",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get products successfully.",
                        "schema": {
                            "$ref": "#/definitions/Api200Response"
                        }
                    },
                    "500": {
                        "description": "Get products failed.",
                        "schema": {
                            "$ref": "#/definitions/Api500Response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "This is for adding new product.",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "product",
                        "description": "The product to be added..",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Saka 18lt"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Saka 18lt cam damacana"
                                },
                                "stock": {
                                    "type": "integer",
                                    "example": 100
                                },
                                "price": {
                                    "type": "integer",
                                    "example": 29
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The product has been successfully added",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "The product has been successfully added"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Adding product failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Adding product failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/product/{id}": {
            "put": {
                "tags": [
                    "product"
                ],
                "summary": "Updated product",
                "description": "Product data is updated.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "The product to be updated.(You can just write the field you want to update)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "price": {
                                    "type": "integer",
                                    "example": 29
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The product id to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product has been successfully updated",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "The product has been successfully updated"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Adding product failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Updating product failed"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product"
                ],
                "summary": "Delete a product",
                "description": "",
                "operationId": "deletePet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product delete successfully.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "The product delete successfully."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Adding product failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Deleting product failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/order/{id}/detail": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Return order detail.",
                "description": " Return order detail by order id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id to detail",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get orders successfully.",
                        "schema": {
                            "$ref": "#/definitions/Api200Response"
                        }
                    },
                    "500": {
                        "description": "Get orders failed.",
                        "schema": {
                            "$ref": "#/definitions/Api500Response"
                        }
                    }
                }
            }
        },
        "/api/v1/order": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Returns all orders.",
                "description": " Returns all orders",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get orders successfully.",
                        "schema": {
                            "$ref": "#/definitions/Api200Response"
                        }
                    },
                    "500": {
                        "description": "Get orders failed.",
                        "schema": {
                            "$ref": "#/definitions/Api500Response"
                        }
                    }
                }
            }
        },
        "/api/v1/order/create": {
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "Created order",
                "description": "The ID and quantity of the product you want to order should be added to the basket.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "order",
                        "description": "The order to be added..",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "basked": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "example": {
                                            "id": "62ab602de876ae746be3e622",
                                            "piece": 3
                                        }
                                    }
                                },
                                "payment_method": {
                                    "type": "string",
                                    "example": "ONLINE"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The order has been successfully created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "The order has been successfully created"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Created order failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Created order failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/order/create-repeat": {
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "Creating a repeat order",
                "description": "Order repetition is created according to the order id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "order",
                        "description": "Order repetition to be added.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "62ab65d670e0c6b9f8ccb99a"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The order repeat has been successfully created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "The order repeat has been successfully created"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Create repeat order failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Create repeat order failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/order/change-status/{id}": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Order status update.",
                "description": "Order cancellation, postponement, return transactions are made by order id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "orderStatus",
                        "description": "The status to be updated is specified in the parameter. (CANCELED, POSTPONEMENT, RETURN)",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "CANCELED"
                                }
                            }
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The order id to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order has been successfully change status.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "The order has been successfully change status."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Adding product failed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Change order status failed."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Api500Response": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Api200Response": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}